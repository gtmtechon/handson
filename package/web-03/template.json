{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sites_webapp_fe_name": {
            "defaultValue": "webapp-fe",
            "type": "String"
        },
        "serverfarms_asp_web03_name": {
            "defaultValue": "asp-web03",
            "type": "String"
        },
        "virtualNetworks_vnet_web03_name": {
            "defaultValue": "vnet-web03",
            "type": "String"
        },
        "privateEndpoints_pl_web03_fe_name": {
            "defaultValue": "pl-web03-fe",
            "type": "String"
        },
        "applicationGateways_apgw_web03_name": {
            "defaultValue": "apgw-web03",
            "type": "String"
        },
        "publicIPAddresses_pip_handson_web03_name": {
            "defaultValue": "pip-handson-web03",
            "type": "String"
        },
        "userAssignedIdentities_oidc_msi_9ec5_name": {
            "defaultValue": "oidc-msi-9ec5",
            "type": "String"
        },
        "privateDnsZones_privatelink_azurewebsites_net_name": {
            "defaultValue": "privatelink.azurewebsites.net",
            "type": "String"
        },
        "ApplicationGatewayWebApplicationFirewallPolicies_waf_plc_web03_01_name": {
            "defaultValue": "waf-plc-web03-01",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2025-01-31-preview",
            "name": "[parameters('userAssignedIdentities_oidc_msi_9ec5_name')]",
            "location": "koreacentral"
        },
        {
            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2024-05-01",
            "name": "[parameters('ApplicationGatewayWebApplicationFirewallPolicies_waf_plc_web03_01_name')]",
            "location": "koreacentral",
            "properties": {
                "customRules": [],
                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Detection",
                    "requestBodyInspectLimitInKB": 128,
                    "fileUploadEnforcement": true,
                    "requestBodyEnforcement": true
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.2",
                            "ruleGroupOverrides": []
                        }
                    ],
                    "exclusions": []
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_privatelink_azurewebsites_net_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_pip_handson_web03_name')]",
            "location": "koreacentral",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "20.249.162.233",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "web03fe",
                    "fqdn": "web03fe.koreacentral.cloudapp.azure.com"
                },
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2024-04-01",
            "name": "[parameters('serverfarms_asp_web03_name')]",
            "location": "Korea Central",
            "sku": {
                "name": "P0v3",
                "tier": "Premium0V3",
                "size": "P0v3",
                "family": "Pv3",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials",
            "apiVersion": "2025-01-31-preview",
            "name": "[concat(parameters('userAssignedIdentities_oidc_msi_9ec5_name'), '/oidc-credential-bd28')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentities_oidc_msi_9ec5_name'))]"
            ],
            "properties": {
                "issuer": "https://token.actions.githubusercontent.com",
                "subject": "repo:gtmtechon/iotmon-fe:ref:refs/heads/web03",
                "audiences": [
                    "api://AzureADTokenExchange"
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azurewebsites_net_name'), '/webapp-fe-bkara2escsbqdygg.koreacentral-01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azurewebsites_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint pl-web03-fe with resource guid 19a46c90-7657-4eb8-85ec-b3818d01640f"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azurewebsites_net_name'), '/webapp-fe-bkara2escsbqdygg.scm.koreacentral-01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azurewebsites_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint pl-web03-fe with resource guid 19a46c90-7657-4eb8-85ec-b3818d01640f"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azurewebsites_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azurewebsites_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-05-01",
            "name": "[parameters('virtualNetworks_vnet_web03_name')]",
            "location": "koreacentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "sn-web03-pl",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-web03-pl')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "defaultOutboundAccess": false
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "sn-apgw",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-apgw')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.1.0/24"
                            ],
                            "applicationGatewayIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]"
                                }
                            ],
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_web03_name'), '/sn-web03-pl')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_web03_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "defaultOutboundAccess": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2024-04-01",
            "name": "[parameters('sites_webapp_fe_name')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_web03_name'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_webapp_fe_name'), '-bkara2escsbqdygg.koreacentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_webapp_fe_name'), '-bkara2escsbqdygg.scm.koreacentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_web03_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "NODE|22-lts",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "ipMode": "IPv4",
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "0797C2B5BA3D343C7B38935CD454FD631D76328DFFA01C58ACEBA9F09D301EA5",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "endToEndEncryptionEnabled": false,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned",
                "autoGeneratedDomainNameLabelScope": "TenantReuse"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/ftp')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/scm')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/597ab110-11f6-4964-8c0c-ff84c909573d')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "OneDeploy",
                "message": "OneDeploy",
                "start_time": "2025-06-30T01:43:36.5882223Z",
                "end_time": "2025-06-30T01:43:47.2016974Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/a1a15909-a822-481b-8f06-a9fd09855de9')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "OneDeploy",
                "message": "OneDeploy",
                "start_time": "2025-06-30T03:18:04.3110956Z",
                "end_time": "2025-06-30T03:18:13.3426818Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/fb8c0c5e-cd7d-48c8-b4e8-c0ead97e2eda')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "OneDeploy",
                "message": "OneDeploy",
                "start_time": "2025-06-30T03:16:08.3477237Z",
                "end_time": "2025-06-30T03:16:17.4601537Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/', parameters('sites_webapp_fe_name'), '-bkara2escsbqdygg.koreacentral-01.azurewebsites.net')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "siteName": "webapp-fe",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/privateEndpointConnections",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/pl-web03-fe-bd71-b5e8a33a-df09-43e2-9c82-e372df31df49')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]"
            ],
            "properties": {
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "actionsRequired": "None"
                },
                "ipAddresses": [
                    "10.0.0.4"
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azurewebsites_net_name'), '/38f3234316f94')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azurewebsites_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_web03_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "resolutionPolicy": "Default",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_web03_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-05-01",
            "name": "[parameters('privateEndpoints_pl_web03_fe_name')]",
            "location": "koreacentral",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-web03-pl')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_pl_web03_fe_name'), '-bd71')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_pl_web03_fe_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_pl_web03_fe_name'), '-bd71'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]",
                            "groupIds": [
                                "sites"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-web03-pl')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('privateEndpoints_pl_web03_fe_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_pl_web03_fe_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azurewebsites_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-azurewebsites-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azurewebsites_net_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_web03_name'), '/sn-apgw')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_web03_name'))]",
                "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.1.0/24"
                ],
                "applicationGatewayIPConfigurations": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]"
                    }
                ],
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Web",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_webapp_fe_name'), '/web')]",
            "location": "Korea Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp_fe_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-apgw')]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "NODE|22-lts",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$webapp-fe",
                "scmType": "GitHubAction",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "cors": {
                    "allowedOrigins": [
                        "https://*.koreacentral.cloudapp.azure.com",
                        "http://*.koreacentral.cloudapp.azure.com"
                    ],
                    "supportCredentials": true
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-apgw')]",
                        "action": "Allow",
                        "tag": "Default",
                        "priority": 300,
                        "name": "vnet-allow",
                        "description": "aa"
                    },
                    {
                        "ipAddress": "Any",
                        "action": "Deny",
                        "priority": 2147483647,
                        "name": "Deny all",
                        "description": "Deny all access"
                    }
                ],
                "ipSecurityRestrictionsDefaultAction": "Deny",
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsDefaultAction": "Allow",
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2024-05-01",
            "name": "[parameters('applicationGateways_apgw_web03_name')]",
            "location": "koreacentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-apgw')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_pip_handson_web03_name'))]",
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('ApplicationGatewayWebApplicationFirewallPolicies_waf_plc_web03_01_name'))]"
            ],
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2",
                    "family": "Generation_2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_web03_name'), 'sn-apgw')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "trustedClientCertificates": [],
                "sslProfiles": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIpIPv4",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_pip_handson_web03_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendPorts/port_80')]",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "port_8081",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendPorts/port_8081')]",
                        "properties": {
                            "port": 8081
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "apgw-be-01",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendAddressPools/apgw-be-01')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "webapp-fe-bkara2escsbqdygg.koreacentral-01.azurewebsites.net"
                                }
                            ]
                        }
                    },
                    {
                        "name": "appgw-bp-web03-pl",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendAddressPools/appgw-bp-web03-pl')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "webapp-fe-bkara2escsbqdygg.koreacentral-01.privatelink.azurewebsites.net"
                                },
                                {
                                    "ipAddress": "10.0.0.4"
                                }
                            ]
                        }
                    }
                ],
                "loadDistributionPolicies": [],
                "backendHttpSettingsCollection": [
                    {
                        "name": "be-conf",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendHttpSettingsCollection/be-conf')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/probes/be-confec2aab2a-b1f6-4ab9-8b6b-2b8a52bce04_')]"
                            }
                        }
                    },
                    {
                        "name": "be-8081",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendHttpSettingsCollection/be-8081')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 20
                        }
                    }
                ],
                "backendSettingsCollection": [],
                "httpListeners": [
                    {
                        "name": "apgw-lsnr-fe",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/httpListeners/apgw-lsnr-fe')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false,
                            "customErrorConfigurations": []
                        }
                    },
                    {
                        "name": "web03-lsnr8081",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/httpListeners/web03-lsnr8081')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/frontendPorts/port_8081')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false,
                            "customErrorConfigurations": []
                        }
                    }
                ],
                "listeners": [],
                "urlPathMaps": [
                    {
                        "name": "rr-8081",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/urlPathMaps/rr-8081')]",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendAddressPools/appgw-bp-web03-pl')]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendHttpSettingsCollection/be-8081')]"
                            },
                            "pathRules": [
                                {
                                    "name": "pltest",
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/urlPathMaps/rr-8081/pathRules/pltest')]",
                                    "properties": {
                                        "paths": [
                                            "/test"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendAddressPools/appgw-bp-web03-pl')]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendHttpSettingsCollection/be-8081')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "apgw-rr-01",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/requestRoutingRules/apgw-rr-01')]",
                        "properties": {
                            "ruleType": "Basic",
                            "priority": 300,
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/httpListeners/apgw-lsnr-fe')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendAddressPools/apgw-be-01')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/backendHttpSettingsCollection/be-conf')]"
                            }
                        }
                    },
                    {
                        "name": "rr-8081",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/requestRoutingRules/rr-8081')]",
                        "properties": {
                            "ruleType": "PathBasedRouting",
                            "priority": 500,
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/httpListeners/web03-lsnr8081')]"
                            },
                            "urlPathMap": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/urlPathMaps/rr-8081')]"
                            }
                        }
                    }
                ],
                "routingRules": [],
                "probes": [
                    {
                        "name": "be-confec2aab2a-b1f6-4ab9-8b6b-2b8a52bce04_",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_apgw_web03_name')), '/probes/be-confec2aab2a-b1f6-4ab9-8b6b-2b8a52bce04_')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "/",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "enableHttp2": true,
                "autoscaleConfiguration": {
                    "minCapacity": 0,
                    "maxCapacity": 10
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('ApplicationGatewayWebApplicationFirewallPolicies_waf_plc_web03_01_name'))]"
                }
            }
        }
    ]
}
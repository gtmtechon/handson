worker_processes 1;

events
{
	worker_connections 1024;
}

http
{
	# <--- The 'server' block must be inside this 'http' block
	include mime.types;
	default_type application/octet-stream;

	sendfile on;
	keepalive_timeout 65;
	map_hash_bucket_size 128; # Try 128 or 256

	map $http_origin $cors_origin
	{
		default "";
		"https://iotmonproxy.koreacentral.cloudapp.azure.com" $http_origin;
		"https://iotmonweb.azurewebsites.net" $http_origin;
		"https://web11demo-edhbbvfvhcese5f5.a01.azurefd.net" $http_origin;
	}


	server
	{
		listen 80;
		listen [::]:80;
		#server_name iotmonproxy.koreacentral.cloudapp.azure.com; # Your actual domain

		# Redirect HTTP to HTTPS
		return 301 https://$host$request_uri;
	}

	server
	{
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name iotmonproxy.koreacentral.cloudapp.azure.com; # Your actual domain

		# SSL 인증서 및 개인 키 파일 경로 지정
		ssl_certificate /etc/nginx/ssl/nginx.crt;
		ssl_certificate_key /etc/nginx/ssl/nginx.key;


		# SSL 프로토콜 및 암호화 스위트 설정 (보안 강화)
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-
		AES256-GCM-SHA384';
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 10m;


		location /
		{
			#set $cors_origin "https://iotmonweb.azurewebsites.net";

			# --- CORS Configuration Starts Here ---
			# Handle preflight (OPTIONS) requests

			if ($request_method = 'OPTIONS')
			{
				add_header 'Access-Control-Allow-Origin' "$cors_origin";
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range'; # Allowed request headers
				add_header 'Access-Control-Max-Age' 1728000; # How long the preflight response can be cached (20 days)
				add_header 'Content-Type' 'text/plain; charset=utf-8';
				add_header 'Content-Length' 0;
				return 204; # No content, successful preflight
			}

			# For actual requests (GET, POST, etc.)
			## add_header 'Access-Control-Allow-Origin' 'https://iotmonweb.azurewebsites.net'; # Allow your specific origin
			add_header 'Access-Control-Allow-Origin' "$cors_origin";
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

			# If your frontend sends credentials (cookies, HTTP authentication), uncomment the line below.
			# Be careful with `*` for Access-Control-Allow-Origin if this is enabled.
			# add_header 'Access-Control-Allow-Credentials' 'true';

			# --- CORS Configuration Ends Here ---
			proxy_pass http://21.0.1.4:8080; # Your backend application
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme; # Crucial for backend to know it was HTTPS
		}
	}
}
